{"version":3,"sources":["app/utility.js","app/Layout.js","app/Particle.js","app/Timer.js","app/Word.js","app/Typing.js","app/App.js","serviceWorker.js","index.js"],"names":["ending","number","hide","className","Global","createGlobalStyle","Root","styled","div","InfoBox","StatsBox","Center","Layout","info","center","stats","map","x","i","key","SelfCenter","ParticleTemplate","focus","Particle","dx","dy","children","style","transform","Timer","ref","durationSec","onDone","useState","started","setStarted","current","setCurrent","done","setDone","useInterval","now","Date","difference","differenceInSeconds","useImperativeHandle","start","timeLeft","forwardRef","Right","Err","Rest","ErrRest","CursorStyle","CursorInner","Cursor","Word","input","word","hideCursor","finish","right","err","rest","mistaken","times","Math","max","length","DURATION","INFO","A_LETTER","Typing","words","good","setGood","bad","setBad","setInput","particles","setParticles","wordIndex","setWordIndex","nextWord","angle","random","PI","distance","cos","sin","particle","concat","startGame","timerRef","handleKeyboard","useEffect","document","addEventListener","removeEventListener","useKeyboard","e","ctrlKey","substring","test","useRef","targetColor","props","useSpring","color","padding","from","hideOnDone","opacity","rotateOnDone","config","friction","clamp","to","App","xs","shuffle","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8cc47ba.chunk.js","sourcesContent":["import React from 'react'\nimport { random } from 'lodash'\nimport { useEffect } from 'react'\n\nexport function ending (number, ending) {\n  let hide = number === 1 ? 'hide' : 'show'\n  return <span className={hide}>{ending}</span>\n}\n\nexport function distance () {\n  let angle = random(0, Math.PI * 2, true)\n  let distance = random(300, 600)\n  let dx = distance * Math.cos(angle)\n  let dy = distance * Math.sin(angle)\n  return { dx, dy }\n}\n\nexport function useKeyboard (handleKeyboard) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard)\n    return () => {\n      document.removeEventListener('keydown', handleKeyboard)\n    }\n  })\n}\n","import React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nlet Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  html, body, #root, #root > div {\n    height: 100%;\n  }\n  .show, .hide {\n    transition: opacity 0.3s;\n  }\n  .show {\n    opacity: 1;\n  }\n  .hide {\n    opacity: 0;\n  }\n`\n\nlet Root = styled.div`\n  font-size: 48pt;\n  display: flex;\n  overflow: hidden;\n`\n\nlet InfoBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet StatsBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  right: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet Center = styled.div`\n  margin: auto;\n  position: relative;\n`\n\n// info - either null or string[]\n// center - element\n// stats - element\nfunction Layout ({ info, center, stats }) {\n  return (\n    <Root>\n      <Global />\n      <Center>{center}</Center>\n      {!info ? null : (\n        <InfoBox>\n          <ul>\n            {info.map((x, i) => (\n              <li key={i}>{x}</li>\n            ))}\n          </ul>\n        </InfoBox>\n      )}\n      <StatsBox>{stats}</StatsBox>\n    </Root>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport styled from 'styled-components'\n\nlet SelfCenter = styled.div`\n  transform: translate(-50%, -50%);\n`\nlet ParticleTemplate = styled.div`\n  * {\n    ${({ focus }) => (focus ? '' : 'color: #ddd !important;')}\n  }\n  ${({ focus }) => (focus ? '' : 'font-size: 32px;')}\n  position: absolute;\n  white-space: nowrap;\n`\n\nfunction Particle ({ dx, dy, children, focus }) {\n  let style = {\n    transform: `translate(${dx}px, ${dy}px)`\n  }\n  return (\n    <ParticleTemplate style={style} focus={focus}>\n      <SelfCenter>{children}</SelfCenter>\n    </ParticleTemplate>\n  )\n}\n\nexport default Particle\n","import { differenceInSeconds } from 'date-fns'\nimport React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport useInterval from '@use-it/interval'\n\nlet CHECK_INTERVAL = 100\n\nlet Timer = ({ durationSec, onDone }, ref) => {\n  let [started, setStarted] = useState(null)\n  let [current, setCurrent] = useState(null)\n  let [done, setDone] = useState(false)\n\n  useInterval(() => {\n    if (done) return\n    if (!started) return\n\n    let now = new Date()\n    let difference = differenceInSeconds(now, started)\n    if (difference !== current) setCurrent(difference)\n    let timeLeft = durationSec - current\n    if (timeLeft <= 0) {\n      onDone()\n      setDone(true)\n    }\n  }, CHECK_INTERVAL)\n\n  useImperativeHandle(ref, () => ({\n    start: () => {\n      if (!started) setStarted(new Date())\n    }\n    // clear: () => to start after done have finished\n  }))\n\n  let timeLeft = durationSec - current\n\n  return <div>{timeLeft} sec.</div>\n}\nTimer = forwardRef(Timer)\n\nexport default Timer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { times } from 'lodash'\n\nlet Right = styled.div`\n  color: #06c;\n  display: inline;\n`\nlet Err = styled.div`\n  display: inline;\n  color: #f30;\n  text-decoration: line-through;\n`\nlet Rest = styled.div`\n  display: inline;\n  color: #b3b3cc;\n`\nlet ErrRest = styled.div`\n  display: inline;\n  color: #b3b3cc;\n  text-decoration: line-through;\n`\nlet CursorStyle = styled.div`\n  display: inline;\n  position: relative;\n`\nlet CursorInner = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  transform: translateX(-0px);\n  border-right: solid 1px #345;\n  height: 100%;\n`\nlet Cursor = () => (\n  <CursorStyle>\n    <CursorInner />\n  </CursorStyle>\n)\n\nfunction Word ({ input, word, focus, hideCursor, finish }) {\n  let right = ''\n  let err = ''\n  let rest = ''\n\n  let mistaken = false\n  times(Math.max(word.length, input.length), i => {\n    if (i < input.length) {\n      if (!mistaken) {\n        mistaken = i >= word.length || input[i] !== word[i]\n      }\n      if (mistaken) {\n        err += input[i]\n      } else {\n        right += input[i]\n      }\n    } else {\n      rest += word[i]\n    }\n  })\n\n  return (\n    <>\n      <Right>{right}</Right>\n      <Err>{err}</Err>\n      {focus && !hideCursor ? <Cursor /> : null}\n      {finish ? <ErrRest>{rest}</ErrRest> : <Rest>{rest}</Rest>}\n    </>\n  )\n}\n\nexport default Word\n","import { animated, useSpring } from 'react-spring'\nimport React, { useState, useRef } from 'react'\n\nimport { distance, ending, useKeyboard } from './utility'\nimport Layout from './Layout'\nimport Particle from './Particle'\nimport Timer from './Timer'\nimport Word from './Word'\n\nlet DURATION = 60\n\nlet INFO = [\n  'Type space after every word;',\n  'The timer starts after any input;',\n  'If you need to restart — reload the page;'\n]\n\nlet A_LETTER = /^.$/\nfunction Typing ({ words }) {\n  let [started, setStarted] = useState(false)\n  let [done, setDone] = useState(false)\n  let [good, setGood] = useState(0)\n  let [bad, setBad] = useState(0)\n\n  let [input, setInput] = useState('')\n  let [particles, setParticles] = useState([])\n  let [wordIndex, setWordIndex] = useState(0)\n  let word = words[wordIndex]\n\n  let nextWord = () => {\n    let success = input === word\n\n    if (success) {\n      setGood(good + 1)\n    } else {\n      setBad(bad + 1)\n    }\n\n    let { dx, dy } = distance()\n    let particle = { input, word, dx, dy }\n\n    setParticles(particles.concat(particle))\n    setWordIndex(wordIndex + 1)\n    setInput('')\n  }\n\n  let startGame = () => {\n    timerRef.current.start()\n    setStarted(true)\n  }\n\n  function handleKeyboard (e) {\n    if (done) return\n    if (e.ctrlKey) return // reloading ctrl+r\n\n    if (e.key === ' ') {\n      // || e.key === 'Enter') {\n      if (input === '') return // NOTE: double presses are ok.....\n      nextWord()\n    } else if (e.key === 'Backspace') {\n      setInput(input.substring(0, input.length - 1))\n    } else if (A_LETTER.test(e.key)) {\n      startGame()\n      input += e.key\n      setInput(input)\n    }\n  }\n\n  useKeyboard(handleKeyboard)\n\n  let timerRef = useRef()\n\n  let onTimer = () => {\n    setDone(true)\n  }\n\n  let targetColor = done ? '#06c' : 'gray'\n  let props = useSpring({\n    color: targetColor,\n    padding: done ? 30 : 0,\n    from: {\n      color: 'gray',\n      padding: 0\n    }\n  })\n  let hideOnDone = useSpring({ opacity: done ? 0 : 1, from: { opacity: 1 } })\n\n  let rotateOnDone = useSpring({\n    config: {\n      friction: 1,\n      clamp: 1\n    },\n    from: {\n      opacity: 1,\n      transform: 'rotate(0deg) scale(1)'\n    },\n    to: !done\n      ? []\n      : [\n          {\n            opacity: 1,\n            transform: 'rotate(360deg) scale(1.1)'\n          },\n          {\n            opacity: 0,\n            transform: 'rotate(0deg) scale(0)'\n          }\n        ]\n  })\n\n  return (\n    <Layout\n      info={started ? null : INFO}\n      center={\n        <>\n          {particles.map((x, i) => (\n            <Particle dx={x.dx} dy={x.dy} key={i}>\n              <Word input={x.input} word={x.word} finish={true} />\n            </Particle>\n          ))}\n          <Particle dx={0} dy={0} focus={true}>\n            <animated.div style={rotateOnDone}>\n              <Word input={input} word={word} focus={true} hideCursor={done} />\n            </animated.div>\n          </Particle>\n        </>\n      }\n      stats={\n        <animated.div style={props}>\n          <animated.div style={hideOnDone}>\n            <Timer ref={timerRef} durationSec={DURATION} onDone={onTimer} />\n          </animated.div>\n          <div>\n            {good} hit{ending(good, 's')}\n          </div>\n          <div>\n            {bad} miss{ending(bad, 'es')}\n          </div>\n        </animated.div>\n      }\n    />\n  )\n}\n\nexport default Typing\n","import React from 'react'\n\nimport Typing from './Typing'\nimport words from './words.json'\nimport { shuffle } from 'lodash'\n\nfunction App () {\n  let xs = shuffle(words)\n  return <Typing words={xs} />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}